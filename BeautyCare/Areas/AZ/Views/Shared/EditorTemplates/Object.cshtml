@{var controllerContext = new ControllerContext(ViewContext.RequestContext, ViewContext.Controller);}
@if (ViewData.TemplateInfo.TemplateDepth > 1)
{
	@ViewData.ModelMetadata.SimpleDisplayText
}
else
{ 
    <dl class="form">
    @foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm)))
    {
        if (prop.HideSurroundingHtml)
        {
            @Html.Editor(prop.PropertyName)
        }
        else
        {
            if (prop.ModelType != typeof (bool))
            {
                if ((prop.ShortDisplayName != null && prop.ShortDisplayName == string.Empty))
                {
                    <dt><div style="display: inline-block;"></div></dt>
                }
                else
                {
                    <dt>@Html.Label(prop.PropertyName, new {@class = "labelHeader"}) </dt>
                }

            }
            <dd>
                @Html.Editor(prop.PropertyName, prop.TemplateHint)
                @if (!string.IsNullOrEmpty(prop.Description))
                {
                    <div class="description">@prop.Description</div>
                }
            
                @{
                    string propertyName = prop.PropertyName;
                    if (prop.AdditionalValues.ContainsKey("TargetPropertyAttribute"))
                    {
                        propertyName = (prop.AdditionalValues["TargetPropertyAttribute"] as TargetPropertyAttribute).TargetProperty;
                    }
                    if (propertyName.Contains("."))
                    {
                        var startIndex = propertyName.LastIndexOf(".") + 1;
                        propertyName = propertyName.Substring(startIndex);
                    }
                    var targetProp = ViewData.ModelMetadata.Properties.SingleOrDefault(p => p.PropertyName == propertyName);
                    if (targetProp.GetValidators(controllerContext).Count() > 0)
                    {
                        <em>
                            @Html.ValidationMessage(targetProp.PropertyName)
                        </em>
                    }
                }
            </dd>
        }
    }
    </dl>
}